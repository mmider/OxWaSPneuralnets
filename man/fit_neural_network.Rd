% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NN_interface.R
\name{fit_neural_network}
\alias{fit_neural_network}
\title{Fit the neural network}
\usage{
fit_neural_network(train_X, train_y, test_X, test_y, n_hidden_layers = 1,
  hidden_layer_sizes = c(20), n_iterations = 100, step_size = 0.01,
  lambda = 0.001, n_cores = 8)
}
\arguments{
\item{train_X}{Matrix of training data (data points in rows, features in columns)}

\item{train_y}{Vector of labels for training data (these have to be integers from 0 to n_classes - 1)}

\item{test_X}{Matrix of test data}

\item{test_y}{Vector of labels for test data}

\item{n_hidden_layers}{Number of hidden layers in the neural network}

\item{hidden_layer_sizes}{Vector containing the number of neurons in each hidden layer}

\item{n_iterations}{The number of iterations for fitting the neural network}

\item{step_size}{The step size for updating parameters at each iteration}

\item{lambda}{The regularisation parameter}

\item{n_cores}{The number of parallel cores}
}
\value{
List containing the following elements: \code{train_acc}, \code{test_acc}, \code{loss_over_time},
\code{prob_train}, \code{prob_test}, \code{pred_train}, \code{pred_test}
}
\description{
Fit the neural network
}
\examples{

data(toy_data)
plot(toy_train$X, col=toy_train$y+1, pch=16)
res = fit_neural_network(toy_train$X, toy_train$y, toy_test$X, toy_test$y, n_iterations = 1000, step_size = 0.001)
plot(res)
res
# Confusion matrix for test data
table(res$pred_test, toy_test$y)

\dontrun{
data(mnist)
# Pick only first 1000 data points (for speed)
res = fit_neural_network(train$x[1:1000, ], train$y[1:1000], test$x[1:500, ], test$y[1:500], n_iterations = 1000, step_size = 0.0001)
plot(res)
res
res = CV_neural_network(train$x[1:500, ], train$y[1:500], test$x[1:250, ], test$y[1:250], n_iterations = 100, step_size = 0.0001)
table(res$pred_test, test$y[1:250])
}
}

